前期目标：
	1.熟悉网络python代码部分，（最后要的效果是如果有别的项目组的人需要识别某些东西，你要会训练、测试）
	   比如，英雄吊射要求识别前哨站顶上的绿灯。从准备数据集—>训练（调参）—>py简单测试—>小电脑部署
          2.tenserrt加速部署部分
	   要掌握如何给AGX以及NX小电脑刷机，和配置相关环境。交龙博客有我写的配环境教程
	   从py导出onnx格式的训练好的网络模型，在小电脑上配合tenserrt部署代码（git上有）进行部署，最后放置在自瞄代码文件结构指定位置并设置路径。

后期方向：
提高速度
	已尝试的：
	1.缩小模型尺寸，训练参数直接修改—>加速部署后fp16能到4.5ms左右
          2.tensorrt加速部署使用int8精度—>s大小的模型能到4~5ms左右(大概)
	。。。


提高精度
	已尝试的：
	1.增加数据集
	2.数据增强的算法：
		调参，包括但不限于缩放比例 颜色 噪声
		添加新的数据增强方法：
			4张图拼成一份丢入训练，其中一张为任意现实中的照片(COCO数据集)，旨在提高对背景的鲁棒性
			抠出装甲板部分，贴在任意现实中的照片之上，旨在减少装甲板识别对车身或是前哨站本体的依赖
			绘制一些弹丸和红点在装甲板上，旨在减少相关干扰（未进行精度测试，未投入使用，但有代码）


目标选择后处理优化
	tenserrt加速代码(git上有)末尾会有c++写的后处理，源代码只是根据置信度提出前100左右个目标，并且高度重合的目标只会保留一个
	已尝试的：
		对每种类型单独排序，选前几个；高度重合的目标如果类别不同，都保留。
	未来可做的：
		用小网络粗略选出视野中所有目标，根据自瞄代码锁定的类别，自动调节ROI使视野仅包括该类别，再精确识别角点。
		旨在充分利用相机的1080p像素
		

其他目标识别需求
	已尝试的：
		对矿石面的识别，装甲板识别网络不好收敛，使用yolo-face网络勉强可以，但精度还可以优化。或是尝试其他网络。
	其他：
		前哨站绿灯识别


